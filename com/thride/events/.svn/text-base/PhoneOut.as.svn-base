package com.thride.events{		import flash.display.MovieClip;	import flash.display.Sprite;	import flash.display.Loader;		import flash.events.MouseEvent;		import flash.events.Event;		import flash.text.TextField;	import flash.text.TextFieldAutoSize;		import flash.net.URLRequest;	import flash.net.navigateToURL;		import flash.geom.Rectangle;	import flash.geom.ColorTransform;		import fl.controls.ComboBox; 	import fl.data.DataProvider; 	import fl.events.ComponentEvent; 		import gs.TweenLite;	import gs.easing.*;	//TweenLite.to(mc, 1, {x:46, y:43, scaleX:1, scaleY:1, rotation:0, alpha:1, tint:0x3399ff, ease:Elastic.easeOut, onComplete:FunctionName });			public class PhoneOut extends Sprite	{				private var closeBut:Sprite;		private var goBut:Sprite;		private var inputBG:Sprite;				private var latitude:String;		private var longitude:String;				private var phoneNum:String;		private var sendurl:String = "";		private var sendstring:String = "http://maps.google.com/maps?hl=en&sll="; //34.086941,-118.270204"				private var inputTxt:TextField;		private var copyTxt:TextField;				private var carrierDomain:String;				private var invalidTint:ColorTransform = new ColorTransform(0.8, 0.8, 0.8, 1, 64, -64, -64, 0);		private var DomainCombo:ComboBox				private var xmlList:XMLList;				public function PhoneOut()		{			addEventListener(Event.ADDED_TO_STAGE, onAdded);		}				public function init($xml:XMLList, $asset:String, $lat:String, $long:String)		{			xmlList = $xml;			copyTxt.htmlText = xmlList.title.valueOf();						latitude = $lat;			longitude = $long;						loadGraphic($asset, goBut);			goBut.addEventListener(MouseEvent.CLICK, goAction);			goBut.buttonMode = true;						initComboBox();						closeBut.addEventListener(MouseEvent.CLICK, closeAction);			closeBut.buttonMode = true;		}				private function goAction(e:MouseEvent)		{			phoneNum = inputTxt.text;			if(validatePhone() && validateCarrier()) initSend();		}						private function validatePhone():Boolean		{			if(phoneNum.length == 10){				inputBG.transform.colorTransform = new ColorTransform(1, 1, 1, 1, 0, 0, 0, 0);				return true;			} else {				inputBG.transform.colorTransform = invalidTint;				return false;			}		}				private function validateCarrier():Boolean{			if(carrierDomain){				DomainCombo.transform.colorTransform = new ColorTransform(1, 1, 1, 1, 0, 0, 0, 0);				return true;			} else {				DomainCombo.transform.colorTransform = invalidTint;				return false;			}		}						private function initSend(){			var linksend:String = sendstring+latitude+","+longitude;			var smsAddress:String = phoneNum+carrierDomain;			var subjectTxt:String = xmlList.sms_subject.valueOf();			var fullsend:String = "mailto:"+smsAddress+"?subject="+escape(subjectTxt)+"&body="+linksend;						trace(">>>>>>>>>>>>PHONE>>>>>>>>>>>>>>"+fullsend);						closeAction(null);		}				private function initError(){					}				private function initComboBox(){						var menuList:Array = [								  {label:"Alltel", data:"@message.alltel.com"},								  {label:"AT&T Cingular", data:"@txt.att.net"},								  {label:"Boost Mobile", data:"@myboostmobile.com"},								  {label:"Nextel", data:"@messaging.nextel.com"},								  {label:"Sprint PCS", data:"@messaging.sprintpcs.com"},								  {label:"T-Mobile", data:"@tmomail.net"},								  {label:"Verizon", data:"@vtext.com"},								  {label:"Virgin Mobile USA", data:"@vmobl.com"}								  ];									/*			for(var i:int; i < dataXML.elements().length(); i++){				var s:Object = {						label:dataXML.country[i].@title, 						data:dataXML.country[i].@id						};				menuList.push(s);							}			*/						DomainCombo = new ComboBox(); 			DomainCombo.dropdownWidth = 210; 			DomainCombo.width = 220;			DomainCombo.x = inputBG.x;			DomainCombo.y = inputBG.y + 30;						DomainCombo.prompt = xmlList.menu.valueOf(); 			DomainCombo.dataProvider = new DataProvider(menuList);			DomainCombo.addEventListener(Event.CHANGE, changeHandler);						addChild(DomainCombo); 						function changeHandler(event:Event):void { 				var l:String = ComboBox(event.target).selectedItem.label;				var id:String = ComboBox(event.target).selectedItem.data; 				trace("COMBOBOX SELECT:"+l+" id:"+id);								carrierDomain = id;			}		}												private function closeAction(e:MouseEvent)		{			visible = false;		}						private function onAdded(e:Event)		{			addEventListener(Event.REMOVED_FROM_STAGE, onRemoved);			closeBut = getChildByName("closebut") as Sprite;			copyTxt = getChildByName("titletxt") as TextField;			goBut = getChildByName("godyn") as Sprite;			inputTxt = getChildByName("phone") as TextField;			inputBG = getChildByName("inputbg") as Sprite;		}				private function loadGraphic(asset:String, target:Sprite)		{						var l = new Loader();			function finishload(e:Event){				target.addChild(e.currentTarget.content);				TweenLite.from(target, 1, {alpha:0, ease:Strong.easeOut});			}			l.contentLoaderInfo.addEventListener(Event.COMPLETE, finishload);			l.load(new URLRequest(asset));					}				private function onRemoved(e:Event)		{								}			}}