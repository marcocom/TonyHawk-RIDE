package com.thride{		import flash.display.Loader;	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.display.StageAlign;	import flash.display.StageQuality;	import flash.display.StageScaleMode;	import flash.display.Bitmap;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.events.ProgressEvent;		import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.net.navigateToURL;	import flash.net.LocalConnection;		import flash.system.Capabilities;	import flash.external.ExternalInterface;		import com.dynamicflash.util.Base64;	import com.thride.AudioEvent;	import gs.TweenLite;	import gs.easing.*;		/////////////////SWF ADDRESS CLASSES////////////////////	/**/  import com.asual.swfaddress.SWFAddress;		/**/	/**/  import com.asual.swfaddress.SWFAddressEvent;	/**/	/**/												/**/	/**//*  SOURCE: http://www.asual.com/swfaddress/  *//**/		public class Base extends MovieClip	{		public  var country:String;		private var xmlAsset:String;		private var bgImgLoc:String;		private var topnavLoc:String;		private var footerLoc:String;		private var currentSection:String;				private var dataArr:Array = new Array();				private var dataXML:XML = new XML();				private var CLIENTWIDTH:Number = Capabilities.screenResolutionX;		private var CLIENTHEIGHT:Number = Capabilities.screenResolutionY;				private var TOPNAVWIDTH:Number;		private var FOOTERHEIGHT:Number = 140;				private var bgClip:Sprite;		private var bgImgClip:Sprite;				private var enviroList:XMLList;		private var navList:XMLList;		private var footerList:XMLList;				private var imgLoader:Loader;		public var navLoader:Loader;		public var contentLoader:Loader;		public var footerLoader:Loader;				private var contentClip:Sprite;		private var navClip:MovieClip;		private var footerClip:MovieClip;		private var loaderClip:Sprite;		private var linkOutClip:LinkOut;				private var linkOutOpened:Boolean = false;		private var firstTimeLoaded:Boolean = false;				public function Base()		{			if(!country) country = "us"; //<======================================to be populated externally.			Global.COUNTRY = country;						var domainget:LocalConnection = new LocalConnection();			Global.DOMAIN = domainget.domain;						xmlAsset = "xml/"+Global.COUNTRY+"/base.xml";			stage ? init() : addEventListener(Event.ADDED_TO_STAGE, init);			bgImgLoc = "img/bg.jpg";			topnavLoc = "swf/topnav.swf";			footerLoc = "swf/footer.swf";		}				private function init()		{			stage.align = StageAlign.TOP_LEFT;			stage.scaleMode = StageScaleMode.NO_SCALE;			stage.quality = StageQuality.BEST;			stage.addEventListener(Event.ACTIVATE, activateEvent);			stage.addEventListener(Event.RESIZE, resizeEvent);			Global._stage = stage;			Global.SWFWIDTH = stage.stageWidth;			Global.SWFHEIGHT = stage.stageHeight;			Global.BG_VOLUME = 1;			Global.VIDEO_VOLUME = 1;			addEventListener(NavEvent.LINKOUT, linkEvent);			addEventListener(TopNavEvent.NAVCHOICE, navEvent);			loadData();		}						////////////////////////////////////////////////////////NAVIGATION				private function linkEvent(e:NavEvent)		{			if(!linkOutOpened){				trace(">>>>>>>>>>>>>>>>LINK OFF SITE>>>>>>>>>>> url:" + e.values);				if(linkOutClip) link.parent.removeChild(linkOutClip);																linkOutClip = new LinkOut(dataXML.bumper_int, e.values[0], killLinkOut, linkTrack);				addChild(linkOutClip);				linkOutClip.x = (Global.SWFWIDTH / 2) - (linkOutClip.width / 2);				linkOutClip.y = (Global.SWFHEIGHT / 2) - (linkOutClip.height / 2);				TweenLite.from(linkOutClip, .3, {x:Global.SWFWIDTH, ease:Bounce.easeOut});								//stage.addEventListener(MouseEvent.MOUSE_DOWN, killLinkOut);				linkOutOpened = true;			}		}				private function killLinkOut(){			linkOutClip.parent.removeChild(linkOutClip);			linkOutClip = null;			//stage.removeEventListener(MouseEvent.MOUSE_DOWN, killLinkOut);			linkOutOpened = false;		}				private function linkTrack(url:String)		{			//get.php?a=" +  Base64.encode(e.target.link) + "&d=\"THXI Preorder\"&t=\"THXI Preorder\"" + "','" + e.target.text			var sendString:String = Global.LINKTRACK+"?a=" + Base64.encode(url) + "&d=" + Base64.encode(Global.COUNTRY) + "&t=" + Base64.encode("THRIDE");			trace("TRACK:"+sendString);			navigateToURL(new URLRequest(sendString), "_blank");		}												private function initSwfAddress()		{			SWFAddress.addEventListener(SWFAddressEvent.CHANGE, addressChange);		}				private function addressChange(e:SWFAddressEvent)		{			if(linkOutOpened)killLinkOut();			trace("BASE - ADDRESS CHANGE name:"+SWFAddress.getPathNames());			ExternalInterface.call("scrollToTop");			if(e.value == "/"){				refData("home");							} else {								var arr:Array = SWFAddress.getPathNames();				trace("ARR: length:"+arr.length+" vals:"+arr[0]);				refData(arr[0]);							}					}				private function navEvent(e:TopNavEvent)		{			//refData(e.idString);			SWFAddress.setValue(e.idString);		}				private function refData(ref:String)		{			trace("REFDATA:"+ref);						for(var i:int; i < navList.elements().length(); i++){				//trace("-- id:"+navList.section[i].@id);				if(navList.section[i].@id == ref){										trace(navList.section[i].valueOf());					var vals:Array = [									  navList.section[i].@id,									  navList.section[i].valueOf(),									  navList.section[i].@xml,									  navList.section[i].@asset									  ];									}			}						if(ref != currentSection){				currentSection = ref;				navLoad(vals);				//SWFAddress.setTitle(vals[1]);				//SWFAddress.setValue(vals[0]);			}		}						///////////////////////////////////////////////////Content		private var currentContent:Array = new Array();				private function navLoad(arr:Array)		{			trace(">>>>>>>>>>>>>NAVLOAD "+arr);						var id:String = arr[1];			var xml:String = arr[2];			var swf:String = arr[3];			if(contentClip) contentClip.visible = false;			if(loaderClip){				removeChild(loaderClip);				loaderClip = null;			}						loaderClip = new LoaderClip(dataXML.loadertxt.valueOf(), initContent);			addChild(loaderClip);						loaderClip.x = (Global.SWFWIDTH/2) - (loaderClip.width/2);			loaderClip.y = 300;			TweenLite.from(LoaderClip, .5, {x:-LoaderClip.width, ease:Bounce.easeOut});						var feedPerc:Function = function(e:ProgressEvent){				if(loaderClip) loaderClip._perc = (e.bytesLoaded / e.bytesTotal)*100;			}						if(currentContent[0] != id){				currentContent = [id, xml];									contentLoader = new Loader();				//contentLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, initContent);				contentLoader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, feedPerc);				contentLoader.load(new URLRequest(swf));			}		}				private function closeLoader(){						loaderClip.parent.removeChild(loaderClip);			loaderClip = null;						Global.ISLOADED = true;		}				private function initContent()		{			closeLoader();			var mc:MovieClip = contentLoader.content as MovieClip;						if(contentClip){ 				removeChild(contentClip);				contentClip = null;			}			contentClip = new Sprite();			addChild(contentClip);			addChild(footerClip);			contentClip.addChild(mc);			contentClip.mouseEnabled = false;			contentClip.y = 100;			contentClip.x = navClip.x;			currentContent.push(mc); //so [2] is now ref			mc.init(currentContent[1]);						contentClip.visible = true;			if(!firstTimeLoaded){				trace(">>>>>>>>>>>>>>>>>>FIRST TIME LOAD COMPLETE<<<<<<<<<<<<<<<<<<<");				firstTimeLoaded = true;				stage.dispatchEvent(new AudioEvent(AudioEvent.TOGGLE, true, false, true));				//Global.BG_TOGGLE = true;			}		}								////////////////////////////////////////////////////THUMBANIM				private function initBg()		{						bgClip = new Sprite();			bgClip.graphics.beginFill(0xFFFFFF, 1);			bgClip.graphics.drawRect(0, 0, Global.SWFWIDTH, Global.SWFHEIGHT);			bgClip.graphics.endFill();			this.addChild(bgClip);						imgLoader = new Loader();			imgLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, animBG);			imgLoader.load(new URLRequest(bgImgLoc));		}						private function animBG(e:Event)		{			bgImgClip = new Sprite();			this.addChild(bgImgClip);			bgImgClip.addChild(imgLoader);			var dupImg:Bitmap = new Bitmap(Bitmap(imgLoader.content).bitmapData);			dupImg.x = imgLoader.content.width;			bgImgClip.addChild(dupImg);			TweenLite.from(bgImgClip, .75, {y:-bgImgClip.height, ease:Bounce.easeOut, onComplete:initFooter});					}						/////////////////////////////////////////////////////FOOTER				public function initNav()		{						navLoader = new Loader();			navLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, animNav);			navLoader.load(new URLRequest(topnavLoc));					}				private function animNav(e:Event)		{			navClip = e.currentTarget.content as MovieClip;			navClip.init(navList, dataXML.music);						TOPNAVWIDTH = 1000;			navClip.x = (Global.SWFWIDTH/2)-(TOPNAVWIDTH/2) ;			this.addChild(navClip);			initSwfAddress();		}								////////////////////////////////////////////////////NAV				public function initFooter()		{			footerLoader = new Loader();			footerLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, animFooter);			footerLoader.load(new URLRequest(footerLoc));		}				private function animFooter(e:Event)		{			footerClip = e.currentTarget.content as MovieClip;			footerClip.init(footerList);						footerClip.x = (Global.SWFWIDTH/2)-(Global.NATIVEWIDTH/2) ;			Global.SWFHEIGHT < Global.NATIVEHEIGHT ? footerClip.y = Global.NATIVEHEIGHT - FOOTERHEIGHT : footerClip.y = Global.SWFHEIGHT - FOOTERHEIGHT;						this.addChild(footerClip);			TweenLite.from(footerClip, .5, {y:Global.SWFHEIGHT, ease:Strong.easeOut});			/*			footerClip.graphics.beginFill(0xE8E8E8, 1);			footerClip.graphics.drawRect(-Global.CONTENTWIDTH, 0, Global.CONTENTWIDTH, 140);			footerClip.graphics.drawRect(Global.NATIVEWIDTH, 0, Global.CONTENTWIDTH, 140);			footerClip.graphics.endFill();			*/			initNav();		}										//////////////////////////////////////////////HANDLERS				private function activateEvent(event:Event) 		{			trace("activateEvent: " + event);		}		private function resizeEvent(event:Event) 		{			Global.SWFWIDTH = stage.stageWidth;			Global.SWFHEIGHT = stage.stageHeight;			//trace("RESIZEEVENT  stageWidth: " + SWFWIDTH + " stageHeight: " + SWFHEIGHT);			trace("SWFWIDTH:"+Global.SWFWIDTH+" navClip.width:"+navClip.width);						navClip.x = (Global.SWFWIDTH/2)-(navClip.hitClip.width/2) ;			contentClip.x = navClip.x;						footerClip.x = (Global.SWFWIDTH/2)-(Global.NATIVEWIDTH/2) ;						Global.SWFHEIGHT < Global.NATIVEHEIGHT ? footerClip.y = Global.NATIVEHEIGHT - FOOTERHEIGHT : footerClip.y = Global.SWFHEIGHT - FOOTERHEIGHT;		}														 				/******************************************		XML		*******************************************/				private function loadData()		{			var dataURL:URLRequest = new URLRequest(xmlAsset);			var xmlLoader:URLLoader = new URLLoader(dataURL);			xmlLoader.addEventListener(Event.COMPLETE, xmlLoaded);			dataXML.ignoreWhitespace = true;			dataXML.ignoreProcessingInstructions;		} 										private function xmlLoaded(event:Event) /////////////////////////////////////////////////////////////////////////////////////////////////////////////////XML PARSING LOGIC		{									dataXML = new XML(event.currentTarget.data);						var totalSections:Number = dataXML.elements().length();			trace("LOADDATA :: total K:"+event.currentTarget.bytesTotal);			trace("TOTAL FIRST NODES==================================================:"+totalSections); 						enviroList = dataXML.environment;			navList = dataXML.nav;									footerList = dataXML.footer;									Global.LINKTRACK = enviroList.link_tracking.@url;			Global.ASSETTRACK = enviroList.asset_tracking.@url;			Global.SEND2FRIEND = enviroList.send2friend.@url;			Global.GOOGLEKEY = enviroList.google_api_key.@url;			initBg();		}					}}