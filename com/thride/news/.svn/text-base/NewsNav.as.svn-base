package com.thride.news{	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.display.DisplayObject;	import flash.display.StageScaleMode;	import flash.display.StageAlign;	import flash.display.StageQuality;	import flash.display.Stage;	import flash.display.Loader;		import flash.display.LineScaleMode;    import flash.display.CapsStyle;    import flash.display.JointStyle;    import flash.display.Shape;	import flash.geom.Point;		import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.net.URLLoader;	import flash.net.URLRequest;		import flash.events.Event;	import flash.events.MouseEvent;			import flash.system.Capabilities;		import flash.events.ProgressEvent;	import flash.media.SoundTransform;		import flash.geom.Rectangle;		import com.asual.swfaddress.*;		import gs.TweenLite;	import gs.easing.*;		public class NewsNav extends MovieClip	{				public var isPlaying:Boolean;				private static const ITEM_HEIGHT:Number = 80;		private static const ITEM_WIDTH:Number = 260;				public var navSpacer:Number = 20;						public var imgLoader:Loader;		public var imgClip:Sprite;		public var maskClip:Sprite;				private var prevButMC:MovieClip;		private var nextButMC:MovieClip;						public var dataXML:XMLList;		public var navArr:Array;				public var currentSet:Number = 0;		public var currentChoice:Number = 0;				public var visibleThumbs:Number = 6;				private var totalThumbs:Number;				private var imagecount:Number = -1;				private var totalSects:Number;				public function NewsNav()		{			addEventListener(Event.ADDED_TO_STAGE, onAddedToStage);		}				public function onAddedToStage(event:Event)		{						prevButMC = getChildByName("arrow_up") as MovieClip;			nextButMC = getChildByName("arrow_dn") as MovieClip;					}		public function init($dataXML:XMLList)		{												dataXML = $dataXML;			totalThumbs = dataXML.elements().length();						trace("INIT THUMBNAV total:"+totalThumbs);						imgClip = new Sprite();			navArr = new Array();			addChild(imgClip);			maskClip = getChildByName("maskclip") as MovieClip;			addChild(maskClip);			imgClip.mask = maskClip;			initImages();					}						public function highlightThumb(num:Number)		{			trace("HIGHLIGHT THUMB    num:"+num+" arr:"+navArr.length);						var ref:Number;						//scrollThumbs(num);						for (var i:Number = 0; i < navArr.length; i++){				var mc:Thumb = navArr[i];				i != num ? mc.onState() : mc.offState();			}		}						private function changeAction(num:Number)		{			trace("VIDEO CONTAINER CHANGEACTION:"+num);					var flip:Number = Math.abs(num - totalThumbs);			SWFAddress.setValue(("news/"+flip))					}				public function initImages()		{						for (var i:int; i < totalThumbs; i++){								var asset:String = dataXML.story[i].@thumb;				var titlename:String = dataXML.story[i].title.valueOf();				var date:String = dataXML.story[i].@date;								var mc:Thumb = new Thumb(titlename, asset, date,  i, changeAction);								imgClip.addChild(mc);				mc.y = (i*ITEM_HEIGHT) + navSpacer;								trace("NEW THUMB :"+i+": asset:"+asset+" mc:"+mc);								navArr.push(mc);			}			if((totalThumbs*(ITEM_HEIGHT+navSpacer)) > maskClip.height) initArrows();			totalSects = Math.ceil(totalThumbs / visibleThumbs);			//changeAction(0);		}				private function scrollThumbs(index:Number)		{						currentSet += index;						var ypoint:Number = -currentSet * (((visibleThumbs * ITEM_HEIGHT)+navSpacer));			TweenLite.to(imgClip, 1 ,{y:ypoint, ease:Strong.easeOut});						trace("SCROLL mod:"+index+" currentSet:"+currentSet+" y:"+ypoint);					}										private function initArrows()		{			trace("INITARROWS");						prevButMC.buttonMode = true;			prevButMC.addEventListener(MouseEvent.MOUSE_OVER, prevArrowOver);			prevButMC.addEventListener(MouseEvent.MOUSE_OUT, prevArrowOut);			prevButMC.addEventListener(MouseEvent.CLICK, prevRequest);						nextButMC.buttonMode = true;			nextButMC.addEventListener(MouseEvent.MOUSE_OVER, nextArrowOver);			nextButMC.addEventListener(MouseEvent.MOUSE_OUT, nextArrowOut);			nextButMC.addEventListener(MouseEvent.CLICK, nextRequest);		}				private function prevArrowOver(e:MouseEvent){			var mc:MovieClip = e.currentTarget as MovieClip;			if(currentSet > 0){				mc.gotoAndStop(2);				mc.useHandCursor = true;			} else {				mc.useHandCursor = false;			}		}		private function prevArrowOut(e:MouseEvent){			var mc:MovieClip = e.currentTarget as MovieClip;			if(currentSet > 0){				mc.gotoAndStop(1);				mc.useHandCursor = true;			} else {				mc.useHandCursor = false;			}		}				private function nextArrowOver(e:MouseEvent){			var mc:MovieClip = e.currentTarget as MovieClip;			if((currentSet+1) < totalSects){				mc.gotoAndStop(2);				mc.useHandCursor = true;			} else {				mc.useHandCursor = false;			}		}		private function nextArrowOut(e:MouseEvent){			var mc:MovieClip = e.currentTarget as MovieClip;			if((currentSet+1) < totalSects){				mc.gotoAndStop(1);				mc.useHandCursor = true;			} else {				mc.useHandCursor = false;			}		}		private function prevRequest(e:MouseEvent)		{			var mc:MovieClip = e.currentTarget as MovieClip;			mc.gotoAndStop(1);			mc.useHandCursor = false;			if(currentSet > 0) scrollThumbs(-1);		}				private function nextRequest(e:MouseEvent)		{			var mc:MovieClip = e.currentTarget as MovieClip;			mc.gotoAndStop(1);			mc.useHandCursor = false;			//trace("NEXT : totalsects:"+totalSects);			if((currentSet+1) < totalSects) scrollThumbs(1);		}				//////////////////////////////////////////Handlers										public function mouseOverHandler(e:MouseEvent)		{			var mc:MovieClip = e.target as MovieClip;			//mc.transform.colorTransform = new ColorTransform(1, 1, 1, 1, 123, 61, 21, .5);						TweenLite.to(mc, 1, { tint:0xF67929, ease:Strong.easeOut});		}				public function mouseOutHandler(e:MouseEvent)		{			var mc:MovieClip = e.target as MovieClip;			//mc.transform.colorTransform = new ColorTransform(1, 1, 1, 1, 1, 1, 1, 1);						TweenLite.to(mc, 1, { tint:0xFFFFFF, ease:Strong.easeOut});		}								/////////////////////////////////////GETSETTERS									}}