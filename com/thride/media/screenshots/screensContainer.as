package com.thride.media.screenshots{	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.display.Loader;	import flash.display.Graphics;		import flash.display.StageDisplayState;		import flash.text.TextField;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.net.URLVariables;	import flash.net.URLRequestMethod;	import flash.net.URLLoaderDataFormat;		import flash.events.Event;	import flash.events.MouseEvent;		import flash.geom.Rectangle;    import flash.xml.XMLDocument;    import flash.xml.XMLNode;    import flash.xml.XMLNodeType;		import com.dynamicflash.util.Base64;	import com.thride.NavEvent;	import com.thride.Global;	import com.asual.swfaddress.*;	import gs.TweenLite;	import gs.easing.*;	//TweenLite.to(mc, 1, {x:46, y:43, scaleX:1, scaleY:1, rotation:0, alpha:1, tint:0x3399ff, ease:Elastic.easeOut, onComplete:FunctionName });			public class screensContainer extends MovieClip	{						public var currentSubSection:String;		public var dataXML:XMLList;						private var bgLoader:Loader;				public var thumbNavMC:ScreensThumbNav;				private var linkoutTxt:String; //needs dynamics				private var prevButMC:MovieClip;		private var nextButMC:MovieClip;				private var shareButMC:MovieClip;		private var linkoutClip:MovieClip;		private var facebookBut:MovieClip;		private var twitterBut:MovieClip;		private var linkoutCloseBut:MovieClip;				public var isThumbOpen:Boolean = false;				public var imgClip:MovieClip;		public var imgLoader:Loader;				private var currentChoice:Number = 0;				private var titleTxt:TextField;		private var bodyTxt:TextField;				private var prevImg:Loader;				private var currentContent:*;				private var totalElements:Number;				public function screensContainer()		{			addEventListener(Event.ADDED_TO_STAGE, onAdded);		}				public function init($dataXML:XMLList, $sharetxt:String)		{			linkoutTxt = $sharetxt;			dataXML = $dataXML;			totalElements = dataXML.elements().length()			trace("SCREENSCONTAINER : "+totalElements);			initImage();			titleTxt = getChildByName("titletxt") as TextField;			//bodyTxt = getChildByName("bodytxt") as TextField;			shareButMC = getChildByName("sharedyn") as MovieClip;			linkoutClip = getChildByName("linkout") as MovieClip;			facebookBut = linkoutClip.getChildByName("facebookdyn") as MovieClip;			twitterBut = linkoutClip.getChildByName("twitterdyn") as MovieClip;			linkoutCloseBut = linkoutClip.getChildByName("closebut") as MovieClip;						linkoutClip.visible = false;			imgClip = getChildByName("imgdyn") as MovieClip;			checkDeepLink();		}								//*******************************************VPLAYER				private function initImage()		{												//vidPlayer.init(asset, nextRequest);						thumbNavMC = getChildByName("thumbnav") as ScreensThumbNav;						thumbNavMC.initThumbNav(dataXML, changeAction);			initShare();		}								/////////////////////////SHARE				private function initShare()		{			var asset:String = "img/"+Global.COUNTRY+"/media/share_icon.png";			var target:MovieClip = shareButMC;			var l = new Loader();			function finishload(e:Event){				shareButMC.addChild(e.currentTarget.content);				shareButMC.addEventListener(MouseEvent.CLICK, openShare);				shareButMC.buttonMode = true;				TweenLite.from(shareButMC, 1, {alpha:0, ease:Strong.easeOut});				trace("SHARE ASSET LOADED w:"+shareButMC.width);			}			l.contentLoaderInfo.addEventListener(Event.COMPLETE, finishload);			l.load(new URLRequest(asset));															var facebookimg:String = "img/"+Global.COUNTRY+"/link_facebook.png";			var facebookLoader:Loader = new Loader();			function initFaceBook(e:Event)			{				facebookBut.addChild(e.currentTarget.content);				facebookBut.buttonMode = true;				facebookBut.addEventListener(MouseEvent.CLICK, facebookAction);			}			facebookLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, initFaceBook);			facebookLoader.load(new URLRequest(facebookimg));						var twitterimg:String = "img/"+Global.COUNTRY+"/link_twitter.png";			var twitterLoader:Loader = new Loader();			function initTwitter(e:Event)			{				twitterBut.addChild(e.currentTarget.content);				twitterBut.buttonMode = true;				twitterBut.addEventListener(MouseEvent.CLICK, twitterAction);			}			twitterLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, initTwitter);			twitterLoader.load(new URLRequest(twitterimg));		}				private function openShare(e:MouseEvent){			//<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<FACEBOOK LINKS			linkoutClip.visible = true;			addChild(linkoutClip);			var txt:TextField = linkoutClip.getChildByName("titletxt") as TextField;			txt.htmlText = linkoutTxt;			linkoutCloseBut.addEventListener(MouseEvent.CLICK, closeLinkOut);			linkoutCloseBut.buttonMode = true;		}				private function twitterAction(e:MouseEvent){						var flip:Number = Math.abs(currentChoice - totalElements);			var url:String = "http://twitter.com/home?status=Check+Out+This+THRIDE+image+http://"+Global.DOMAIN + escape("/#/media/screenshots/")+flip;			dispatchEvent(new NavEvent(NavEvent.LINKOUT, true, true, url));			closeLinkOut(null);		}				private function facebookAction(e:MouseEvent){						var flip:Number = Math.abs(currentChoice - totalElements);			var url:String = "http://www.facebook.com/share.php?u=http://"+Global.DOMAIN + escape("/#/media/screenshots/")+flip;			dispatchEvent(new NavEvent(NavEvent.LINKOUT, true, true, url));			closeLinkOut(null);		}				private function closeLinkOut(e:MouseEvent){			linkoutClip.visible = false;		}						public function closeAction()		{			if(currentContent){			currentContent.parent.removeChild(currentContent);			currentContent = null;			}			if(imgClip){			imgClip.parent.removeChild(imgClip);			imgClip = null;			}		}								private function changeAction(num:Number)		{			var flip:Number = Math.abs(num - totalElements);			trace("SCREENSCONTAINER CHANGEACTION:"+num);			SWFAddress.setValue(("media/screenshots/"+flip))			//SWFAddress.setTitle(("MEDIA :: SCREENSHOTS:"+num));		}						private function assetTrack($asset:String)		{			var sendObj:URLVariables = new URLVariables();			sendObj.a = Base64.encode($asset);			sendObj.s = Base64.encode("THRIDE");			sendObj.t = Base64.encode("image");			sendObj.c = Base64.encode(Global.COUNTRY);						var request:URLRequest = new URLRequest(Global.ASSETTRACK);			request.method = URLRequestMethod.POST;			request.data = sendObj;			 			var loader:URLLoader = new URLLoader();			loader.dataFormat = URLLoaderDataFormat.VARIABLES;			 			try{				loader.load(request);			}			catch (error:Error) {				trace("Unable to load URL");			}		}				public function changeImage(num:Number)		{						thumbNavMC.highlightThumb(num);			imgLoader = new Loader();			imgLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, imgLoaded);			imgLoader.load(new URLRequest(dataXML.image[num].@asset));			assetTrack(dataXML.image[num].@asset);			currentChoice = num;			trace("CONTAINER - CHANGE IMAGE:"+num);			//vidPlayer.changeImage(num);			titleTxt.htmlText = dataXML.image[num].title.valueOf();			//bodyTxt.htmlText = dataXML.image[num].copyblock.valueOf();		}				private function imgLoaded(e:Event)		{			if(currentContent) currentContent.parent.removeChild(currentContent);			imgClip.addChild(imgLoader);			currentContent = imgLoader;			TweenLite.from(imgLoader, 1, {alpha:0, ease:Strong.easeOut});		}						private function addressChange(e:SWFAddressEvent)		{			var arr:Array = SWFAddress.getPathNames();						trace("\n\nMEDIA - SCREENSCONTAINER --- ADDRESS CHANGE name:"+e.value+" ARR: length:"+arr.length+" vals:"+arr[2]);			if(arr.length > 2){ 									var flip:Number = Math.abs(arr[2] - totalElements);				changeImage(flip);			}					}				private function checkDeepLink()		{			SWFAddress.addEventListener(SWFAddressEvent.CHANGE, addressChange);						var arr:Array = SWFAddress.getPathNames();			if(arr.length < 3){ 				SWFAddress.setValue(("media/screenshots/"+totalElements));				//changeImage(0);			} else {									var flip:Number = Math.abs(arr[2] - totalElements);				changeImage(flip);			}					}						private function nextRequest(){			trace("======================NEXT REQUEST");			if( (currentChoice+1) < dataXML.elements().length()){				var index:Number = currentChoice+1;				changeAction(index);			} else {				changeAction(0);			}		}				private function prevRequest(){						if( (currentChoice-1) >= 0){				var index:Number = currentChoice - 1;				changeAction(index);			} else {								var index2:Number = (dataXML.elements().length()-1);				changeAction(index2);			}					}						private function onAdded(e:Event)		{			//addEventListener(Event.REMOVED_FROM_STAGE, onRemoved);		}		private function onRemoved(e:Event){			SWFAddress.removeEventListener(SWFAddressEvent.CHANGE, addressChange);			delete this;		}					}}