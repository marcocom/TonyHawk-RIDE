package com.thride.home{		import flash.events.Event;	import flash.net.URLLoader;	import flash.net.URLRequest;		import flash.display.Loader;	import flash.display.MovieClip;	import flash.display.Sprite;		import flash.events.Event;	import flash.events.MouseEvent;			import flash.geom.Point;			import flash.text.TextField;	import flash.text.TextFieldAutoSize;		import flash.geom.Rectangle;		import com.thride.NavEvent;	import gs.TweenLite;	import gs.easing.*;		public class Twitter extends MovieClip	{				private var dataXML:XML = new XML();				public var id:String;				public var isOpen:Boolean;		public var isOver:Boolean;				public var maskClip:MovieClip;		public var darkClip:MovieClip;				private var dataList:XMLList;				private var xmlAsset:String;				private var hitClip:Sprite;				public function Twitter()		{					}				public function init(){			xmlAsset =  dataList.@feed_url;			loadData();						//initTweet();			var titleTxt:TextField = this.getChildByName("titletxt") as TextField;			var titleCopy:String = dataList.title.valueOf();			if(titleTxt){				titleTxt.htmlText = titleCopy;				TweenLite.from(titleTxt, 1, {alpha:0, ease:Strong.easeOut});			}						var subTitleTxt:TextField = this.getChildByName("subtitletxt") as TextField;			var subTitleCopy:String = dataList.subtitle.valueOf();			if(subTitleTxt){				subTitleTxt.htmlText = subTitleCopy;				TweenLite.from(subTitleTxt, 1.5, {alpha:0, ease:Strong.easeOut});			}			initImg();		}						////////////////////////////////////////////////CONTENT		function initTweet()		{			var dateString:String = dataXML.channel.item[0].pubDate.valueOf();			var dataArr:Array = dateString.split(" ");			var timeRaw:String = dataArr[4];			var hourRaw:Number = Number(dataArr[4].substring(0, 2));			if(hourRaw > 12) hourRaw -= 12;			var hourFinal:String = hourRaw + dataArr[4].substring(2, 8);			var spacePoint:Number = dateString.lastIndexOf(" ", (dateString.length - 7));			var dateFinal:String = dateString.substring(0, spacePoint) + " " + hourFinal;			trace(dateFinal);						var bodyTxt:TextField = this.getChildByName("bodytxt") as TextField;			var bodyCopy:String = dataXML.channel.item[0].title.valueOf();			if(bodyTxt){				bodyTxt.htmlText = "<font size=\"10\">"+dateFinal+"</font>"+"\n"+bodyCopy;				TweenLite.from(bodyTxt, 2, {alpha:0, ease:Strong.easeOut});			}						hitClip = getChildByName("hit") as Sprite;			hitClip.addEventListener(MouseEvent.CLICK, linkOut);		}				private function initImg(){			var titlesrc:String = dataList.@asset;			if(titlesrc){				trace("INITIMG : "+titlesrc);				var titlegfx:Loader = new Loader();				titlegfx.contentLoaderInfo.addEventListener(Event.COMPLETE, animImg);				titlegfx.load(new URLRequest(titlesrc));			}		}				private function animImg(e:Event)		{						var target:MovieClip = this.getChildByName("dynclip") as MovieClip;						target.addChild(e.currentTarget.content);			TweenLite.from(target, .5, {alpha:0, ease:Strong.easeOut});		}						private function linkOut(e:Event)		{			var url:String = dataXML.channel.item[0].link.valueOf();			dispatchEvent(new NavEvent(NavEvent.LINKOUT, true, true, url));		}										//////////////////////////////////////////////HANDLERS								public function navClick(e:MouseEvent)		{					}		public function openAnim()		{			this.gotoAndPlay("open");		}		public function closeAnim(){			this.gotoAndPlay("close");		}				//////////GETSET				public function set datalist(xml:XMLList)		{			dataList = xml;		}				////////CONSTRUCT				private function onAdded(e:Event)		{			 		}				/******************************************		XML		*******************************************/				private function loadData()		{			var dataURL:URLRequest = new URLRequest(xmlAsset);			var xmlLoader:URLLoader = new URLLoader(dataURL);			xmlLoader.addEventListener(Event.COMPLETE, xmlLoaded);			dataXML.ignoreWhitespace = true;			dataXML.ignoreProcessingInstructions = true;		} 										private function xmlLoaded(event:Event) /////////////////////////////////////////////////////////////////////////////////////////////////////////////////XML PARSING LOGIC		{									dataXML = new XML(event.currentTarget.data);						var totalSections:Number = dataXML.elements().length();			trace("LOADDATA :: total K:"+event.currentTarget.bytesTotal);			trace("TOTAL FIRST NODES==================================================:"+totalSections); 			initTweet();		}			}}